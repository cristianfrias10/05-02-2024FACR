/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CRUDA;

/**
 *
 * @author hecto
 */
public class ModificarAlumnos extends javax.swing.JFrame {

    private java.util.ArrayList<Clases.Alumno> alums;
    private int indiceActual = 0;

    /**
     * Creates new form ModificarAlumnos
     */
    public ModificarAlumnos() {
        initComponents();

        try {
            java.io.FileInputStream fis = new java.io.FileInputStream("Alumnos");
            java.io.ObjectInputStream ois = new java.io.ObjectInputStream(fis);
            alums = (java.util.ArrayList<Clases.Alumno>) ois.readObject();
            ois.close();
            mostrarDatos(indiceActual);
        } catch (java.io.IOException | ClassNotFoundException es) {
            System.out.println("Error al cargar datos desde el archivo: " + es.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Borrar = new javax.swing.JButton();
        Regresar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lblElegir = new javax.swing.JLabel();
        txtElegir = new javax.swing.JTextField();
        Buscar = new javax.swing.JButton();
        txtCarrera = new javax.swing.JTextField();
        txtSemestre = new javax.swing.JTextField();
        lblMatricula = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellidos = new javax.swing.JLabel();
        lblEdad = new javax.swing.JLabel();
        lblCarrera = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblSemestre = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        Modificar = new javax.swing.JButton();
        Regresar1 = new javax.swing.JButton();

        Borrar.setText("Dar de baja");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });

        Regresar.setText("REGRESAR");
        Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel7.setText("MODIFICAR - ALUMNOS");

        lblElegir.setText("NÃºmero de matricula:");

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        lblMatricula.setText("Matricula: ");

        lblNombre.setText("Nombre: ");

        lblApellidos.setText("Apellidos: ");

        lblEdad.setText("Edad:");

        lblCarrera.setText("Carrera:");

        lblSemestre.setText("Semestre:");

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        Regresar1.setText("REGRESAR");
        Regresar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Regresar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblElegir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtElegir, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(Buscar)
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMatricula)
                                    .addComponent(lblNombre))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Modificar)
                                    .addGap(82, 82, 82)
                                    .addComponent(Regresar1))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblApellidos)
                                        .addComponent(lblEdad)
                                        .addComponent(lblCarrera)
                                        .addComponent(lblSemestre))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtElegir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblElegir)
                    .addComponent(Buscar))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMatricula)
                    .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblApellidos)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEdad)
                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarrera)
                    .addComponent(txtCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemestre)
                    .addComponent(txtSemestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Modificar)
                    .addComponent(Regresar1))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        String matriculaBuscar = txtElegir.getText().trim();

        if (matriculaBuscar.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor ingrese una matricula a buscar.");
        } else {
            boolean encontrado = false;
            int indiceAlumno = -1;
            for (int i = 0; i < alums.size(); i++) {
                if (String.valueOf(alums.get(i).getMatricula()).equals(matriculaBuscar)) {
                    encontrado = true;
                    indiceAlumno = i;
                    break;
                }
            }

            if (encontrado) {
                mostrarDatos(indiceAlumno);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "La matricula especificada no existe en la base de datos.");
            }

            txtElegir.setText("");
        }
    }//GEN-LAST:event_BuscarActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        String matriculaText = txtElegir.getText();

        try {
            int matricula = Integer.parseInt(matriculaText);
            boolean encontrado = false;
            for (int i = 0; i < alums.size(); i++) {
                if (alums.get(i).getMatricula() == matricula) {
                    alums.remove(i);
                    encontrado = true;
                    break;
                }
            }
            if (encontrado) {
                javax.swing.JOptionPane.showMessageDialog(this, "Alumno borrado exitosamente.");

                try {
                    java.io.FileOutputStream fos = new java.io.FileOutputStream("Alumnos");
                    java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(fos);
                    oos.writeObject(alums);
                    oos.close();
                } catch (java.io.IOException ex) {
                    System.out.println("Error al guardar datos en el archivo: " + ex.toString());
                }

                lblMatricula.setText("Matricula");
                lblNombre.setText("Nombre");
                lblApellidos.setText("Apellidos");
                lblEdad.setText("Edad");
                lblCarrera.setText("Carrera");
                lblSemestre.setText("Semestre");
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Matricula no encontrada.");
            }
        } catch (NumberFormatException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor ingrese un nÃºmero vÃ¡lido en la matricula.");
        }
    }//GEN-LAST:event_BorrarActionPerformed

    private void RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarActionPerformed
        this.dispose();

        ReportesAlumnos reportes = new ReportesAlumnos();
        reportes.setVisible(true);
    }//GEN-LAST:event_RegresarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        String matriculaModificar = txtMatricula.getText().trim();
        String nuevoNombre = txtNombre.getText().trim();
        String nuevosApellidos = txtApellidos.getText().trim();
        String nuevaEdadStr = txtEdad.getText().trim();
        String nuevaCarrera = txtCarrera.getText().trim();
        String nuevoSemestreStr = txtSemestre.getText().trim();

        Clases.Alumno alumnoModificar = null;
        for (Clases.Alumno alumno : alums) {
            if (String.valueOf(alumno.getMatricula()).equals(matriculaModificar)) {
                alumnoModificar = alumno;
                break;
            }
        }

        if (!nuevoNombre.isEmpty()) {
            alumnoModificar.setNombre(nuevoNombre);
        }
        if (!nuevosApellidos.isEmpty()) {
            alumnoModificar.setApellidos(nuevosApellidos);
        }
        if (!nuevaEdadStr.isEmpty()) {
            int nuevaEdad = Integer.parseInt(nuevaEdadStr);
            alumnoModificar.setEdad((byte) nuevaEdad);
        }
        if (!nuevaCarrera.isEmpty()) {
            alumnoModificar.setCarrera(nuevaCarrera);
        }
        if (!nuevoSemestreStr.isEmpty()) {
            int nuevoSemestre = Integer.parseInt(nuevoSemestreStr);
            alumnoModificar.setSemestre((byte) nuevoSemestre);
        }

        txtMatricula.setText("");
        txtNombre.setText("");
        txtApellidos.setText("");
        txtEdad.setText("");
        txtCarrera.setText("");
        txtSemestre.setText("");

        try {
            java.io.FileOutputStream fos = new java.io.FileOutputStream("Alumnos");
            java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(fos);
            oos.writeObject(alums);
            oos.close();
            javax.swing.JOptionPane.showMessageDialog(this, "Los datos se han modificado y guardado correctamente.");
        } catch (java.io.IOException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al guardar los datos modificados: " + ex.toString());
        }
    }//GEN-LAST:event_ModificarActionPerformed

    private void Regresar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Regresar1ActionPerformed
        this.dispose();

        Menus.MenuAlumnos menuPrincipal = new Menus.MenuAlumnos();
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_Regresar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Borrar;
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton Regresar;
    private javax.swing.JButton Regresar1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblCarrera;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblElegir;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblSemestre;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCarrera;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtElegir;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSemestre;
    // End of variables declaration//GEN-END:variables

    private void mostrarDatos(int index) {
        if (index >= 0 && index < alums.size()) {
            Clases.Alumno alumno = alums.get(index);
            lblMatricula.setText("Matricula: " + alumno.getMatricula());
            lblNombre.setText("Nombre: " + alumno.getNombre());
            lblApellidos.setText("Apellidos: " + alumno.getApellidos());
            lblEdad.setText("Edad: " + alumno.getEdad());
            lblCarrera.setText("Carrera: " + alumno.getCarrera());
            lblSemestre.setText("Semestre: " + alumno.getSemestre());
        }
    }

}
